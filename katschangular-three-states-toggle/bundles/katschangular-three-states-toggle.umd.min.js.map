{"version":3,"sources":["ng://katschangular-three-states-toggle/lib/katschangular-three-states-toggle.component.ts","ng://katschangular-three-states-toggle/lib/katschangular-three-states-toggle.module.ts"],"names":["KatschangularThreeStatesToggleComponent","this","valueChange","EventEmitter","prototype","ngOnInit","setIntValues","setToggleClass","ngOnChanges","changes","toggleValue","intValue","value","previousValue","emit","toggle","disabled","toggleClass","Component","args","selector","template","ViewChild","static","Input","Output","KatschangularThreeStatesToggleModule","NgModule","declarations","imports","CommonModule","FormsModule","MatSliderModule","exports"],"mappings":"ogBAAA,IAAAA,EAAA,WAwCE,SAAAA,IAhBUC,KAAAC,YAAqC,IAAIC,EAAAA,aAqGrD,OAjFEH,EAAAI,UAAAC,SAAA,WACEJ,KAAKK,eACLL,KAAKM,kBAIPP,EAAAI,UAAAI,YAAA,SAAYC,GACVR,KAAKK,eACLL,KAAKM,kBAIPP,EAAAI,UAAAM,YAAA,SAAYC,GACVV,KAAKU,SAAWA,EAEM,IAAlBV,KAAKU,SACPV,KAAKW,OAAQ,EACc,KAAlBX,KAAKU,SACdV,KAAKW,MAAQ,KAEbX,KAAKW,OAAQ,EAGfX,KAAKM,iBACLN,KAAKY,cAAkC,KAAlBZ,KAAKU,SAAoC,MAAlBV,KAAKU,SAAmBV,KAAKY,cACzEZ,KAAKC,YAAYY,KAAKb,KAAKW,QAI7BZ,EAAAI,UAAAW,OAAA,WACMd,KAAKe,YAIU,IAAff,KAAKW,QAAiC,IAAfX,KAAKW,MAC9BX,KAAKW,MAAQ,MAEc,IAAvBX,KAAKY,cACPZ,KAAKW,OAAQ,GACmB,IAAvBX,KAAKY,cACdZ,KAAKW,OAAQ,EAEbX,KAAKW,OAAQ,EAGjBX,KAAKK,eACLL,KAAKM,iBACLN,KAAKC,YAAYY,KAAKb,KAAKW,SAIrBZ,EAAAI,UAAAE,aAAR,YACqB,IAAfL,KAAKW,MACPX,KAAKU,SAAW,KACQ,IAAfV,KAAKW,MACdX,KAAKU,SAAW,EAEhBV,KAAKU,SAAW,GAGlBV,KAAKY,cAAkC,KAAlBZ,KAAKU,SAAoC,MAAlBV,KAAKU,SAAmBV,KAAKY,eAInEb,EAAAI,UAAAG,eAAR,WACMN,KAAKe,SACPf,KAAKgB,YAAc,kBAKF,IAAfhB,KAAKW,MACPX,KAAKgB,YAAc,cACK,IAAfhB,KAAKW,MACdX,KAAKgB,YAAc,cAEnBhB,KAAKgB,YAAc,kCA3GxBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oCACVC,SAAA,+lHAKCC,EAAAA,UAASH,KAAA,CAAC,kBAAmB,CAAEI,QAAQ,mBAGvCC,EAAAA,2BACAC,EAAAA,yBAGAD,EAAAA,qBAGAA,EAAAA,qBAGAA,EAAAA,SA4FHxB,EA7HA,GCAA,IAAA0B,EAAA,WASA,SAAAA,KAaoD,2BAbnDC,EAAAA,SAAQR,KAAA,CAAC,CACRS,aAAc,CACZ5B,GAEF6B,QAAS,CACPC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,iBAEFC,QAAS,CACPjC,OAGgD0B,EAtBpD","sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material/core/typings/common-behaviors/color';\n\n@Component({\n  selector: 'katschangular-three-states-toggle',\n  templateUrl: 'katschangular-three-states-toggle.component.html',\n  styleUrls: ['katschangular-three-states-toggle.component.scss'],\n})\nexport class KatschangularThreeStatesToggleComponent implements OnInit, OnChanges {\n\n  @ViewChild('triToggleSlider', { static: true }) matSliderRef: ElementRef;\n\n  /* value */\n  @Input() value: boolean;\n  @Output() valueChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /* Wether the input is disabled */\n  @Input() disabled: boolean;\n\n  /* Material color of the input*/\n  @Input() color: ThemePalette;\n\n  /* Optional label of the input */\n  @Input() label: string;\n\n  intValue: number;\n  previousValue: boolean;\n  toggleClass: string;\n\n\n  constructor() {\n  }\n\n\n  ngOnInit() {\n    this.setIntValues();\n    this.setToggleClass();\n  }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.setIntValues();\n    this.setToggleClass();\n  }\n\n\n  toggleValue(intValue: number) {\n    this.intValue = intValue;\n\n    if (this.intValue === 0) {\n      this.value = false;\n    } else if (this.intValue === 50) {\n      this.value = null;\n    } else {\n      this.value = true;\n    }\n\n    this.setToggleClass();\n    this.previousValue = this.intValue !== 50 ? this.intValue === 100 : this.previousValue;\n    this.valueChange.emit(this.value);\n  }\n\n\n  toggle() {\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.value === true || this.value === false) {\n      this.value = null;\n    } else {\n      if (this.previousValue === false) {\n        this.value = true;\n      } else if (this.previousValue === true) {\n        this.value = false;\n      } else {\n        this.value = true;\n      }\n    }\n    this.setIntValues();\n    this.setToggleClass();\n    this.valueChange.emit(this.value);\n  }\n\n\n  private setIntValues() {\n    if (this.value === true) {\n      this.intValue = 100;\n    } else if (this.value === false) {\n      this.intValue = 0;\n    } else {\n      this.intValue = 50;\n    }\n\n    this.previousValue = this.intValue !== 50 ? this.intValue === 100 : this.previousValue;\n  }\n\n\n  private setToggleClass() {\n    if (this.disabled) {\n      this.toggleClass = 'state-disabled';\n\n      return;\n    }\n\n    if (this.value === true) {\n      this.toggleClass = 'state-true';\n    } else if (this.value === false) {\n      this.toggleClass = 'state-false';\n    } else {\n      this.toggleClass = 'state-none';\n    }\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { CommonModule } from '@angular/common';\nimport { KatschangularThreeStatesToggleComponent } from './katschangular-three-states-toggle.component';\n\n\n@NgModule({\n  declarations: [\n    KatschangularThreeStatesToggleComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSliderModule\n  ],\n  exports: [\n    KatschangularThreeStatesToggleComponent\n  ]\n})\nexport class KatschangularThreeStatesToggleModule { }\n"]}